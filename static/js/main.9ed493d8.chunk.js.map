{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","logo.png","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","event","this","props","className","as","summary","location","variant","onClick","href","htmlLink","rel","target","description","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","updateNumberOfEvents","mockData","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","start","startsWith","done","getAccessToken","token","url","axios","get","data","extractLocations","JSON","stringify","Set","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","locationEvents","mounted","src","logo","alt","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.9ed493d8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Event extends Component {\n    state = {\n        collapsed: true,\n    };\n\n    handleClick = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n    render() {\n        const { event } = this.props;\n        const { collapsed } = this.state;\n        return (\n            <div className=\"event\">\n                <h4 className=\"summary\" as=\"h4\">{event.summary}</h4>\n                <div className=\"EventBody\">\n                    <p className=\"StartDate\">\n                        {/* start date: {event.start.dateTime} | {event.start.timeZone} */}\n                    </p>\n                    <p className=\"location\"> location:{event.location}</p>\n                    <button variant=\"primary\" className=\"ShowMore\" onClick={this.handleClick}>\n                        More details\n                    </button>\n                    <div className={`MoreInfo ${collapsed ? `hide` : `show`}`}>\n                        <h3>More about {event.summary} event:</h3>\n                        <a href={event.htmlLink} rel=\"noreferrer\" target=\"_blank\">\n                            Click here to see more details on Google Calendar\n                        </a>\n                        <p className=\"EventDescription\">{event.description}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n            query: value,\n            suggestions,\n        });\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(suggestion);\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({ showSuggestions: true }) }} />\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n                    {this.state.suggestions.map((suggestion) => (\n                        <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>\n                            {suggestion}\n                        </li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n\n            </div>\n        );\n    }\n}\nexport default CitySearch;\n","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n    render() {\n        return (\n            <div className=\"DefaultNumber\">\n                <input\n                    type=\"number\"\n                    className=\"NumberOfEvents\"\n                    value={this.props.numberOfEvents}\n                    onChange={this.props.updateNumberOfEvents}\n                />\n            </div>\n        );\n    }\n}\nexport default NumberOfEvents;","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n\n];\n\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\"https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}\")\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        \"https://a8tjgkywnd.execute-api.eu-central-1.amazonaws.com/dev/api/token\" + \"/\" + encodeCode\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = \"https://a8tjgkywnd.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" + '/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\"https://a8tjgkywnd.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\");\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}\n","export default __webpack_public_path__ + \"static/media/logo.abd952de.png\";","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport './nprogress.css';\nimport logo from './logo.png';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all')\n        ?\n        events\n        :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}